// <auto-generated />
using System;
using Infrastructure.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ContextCatalogs))]
    partial class ContextCatalogsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Catalogo", b =>
                {
                    b.Property<Guid>("CatalogoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogoGrupo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComercioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("CatalogoId");

                    b.HasIndex("CatalogoId")
                        .IsUnique();

                    b.ToTable("Catalogos");

                    b.HasData(
                        new
                        {
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            CatalogoGrupo = new Guid("ffca0022-eb43-4205-9a1b-73a72f8e3f95"),
                            ComercioId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 56, DateTimeKind.Local).AddTicks(6689),
                            Descricao = "Cardápio Principal do comércio",
                            Disponivel = true,
                            Nome = "Cardápio Principal",
                            Status = 1,
                            Tipo = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.Property<Guid>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("CategoriaId");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("CategoriaId")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = new Guid("c1a5f8e2-3b6d-4f8e-9c7e-0d8f9a1b2c3d"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 59, DateTimeKind.Local).AddTicks(569),
                            Descricao = "Categoria de Pizzas Tradicionais",
                            Index = 0,
                            Nome = "Pizzas Tradicionais",
                            Status = 1,
                            Tipo = 1
                        },
                        new
                        {
                            CategoriaId = new Guid("d2b6f9e3-4c7e-5f9f-0d8f-1a2b3c4d5e6f"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 59, DateTimeKind.Local).AddTicks(1204),
                            Descricao = "Categoria de Massas para Pizzas",
                            Index = 1,
                            Nome = "Lanches Rápidos",
                            Status = 1,
                            Tipo = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Contexto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ContextoType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Contextos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c5dfc17-fb38-44d5-8840-328e6b0c4293"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 0
                        },
                        new
                        {
                            Id = new Guid("53e952f7-6a1f-427b-8d82-156d48ec960e"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.CustomizacaoModificacoes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("customizationOptionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("parentCustomizationOptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("customizationOptionId");

                    b.HasIndex("parentCustomizationOptionId");

                    b.ToTable("CustomizacaoModificacoes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe66f09c-aee6-4496-9771-6f6e3af407c8"),
                            ItemId = new Guid("289a4fbe-18b9-4506-b21f-2957f5919fbc"),
                            Status = 1,
                            customizationOptionId = new Guid("0d58a046-1871-433d-bd8d-2b33abfbfa70"),
                            parentCustomizationOptionId = new Guid("945ef3bc-7741-4bec-a0ce-4660c09a564f")
                        },
                        new
                        {
                            Id = new Guid("40da28b6-2c2e-4392-ae97-f1101e1893f6"),
                            ItemId = new Guid("289a4fbe-18b9-4506-b21f-2957f5919fbc"),
                            Status = 1,
                            customizationOptionId = new Guid("0d58a046-1871-433d-bd8d-2b33abfbfa70"),
                            parentCustomizationOptionId = new Guid("2587c76e-3aa3-45e6-95d9-35c21ac19f9d")
                        },
                        new
                        {
                            Id = new Guid("88cf4471-0899-47e3-89cd-6003ef006cb0"),
                            ItemId = new Guid("289a4fbe-18b9-4506-b21f-2957f5919fbc"),
                            Status = 1,
                            customizationOptionId = new Guid("a4eb62d0-ca33-459e-82b1-4de25997ba9e"),
                            parentCustomizationOptionId = new Guid("945ef3bc-7741-4bec-a0ce-4660c09a564f")
                        },
                        new
                        {
                            Id = new Guid("147635af-235d-4e7c-a2c5-899fc6fe5ca8"),
                            ItemId = new Guid("289a4fbe-18b9-4506-b21f-2957f5919fbc"),
                            Status = 1,
                            customizationOptionId = new Guid("a4eb62d0-ca33-459e-82b1-4de25997ba9e"),
                            parentCustomizationOptionId = new Guid("2587c76e-3aa3-45e6-95d9-35c21ac19f9d")
                        });
                });

            modelBuilder.Entity("Domain.Entities.GrupoOpcoes", b =>
                {
                    b.Property<Guid>("OpcaoGrupoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceGroupoType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OpcaoGrupoId");

                    b.HasIndex("OpcaoGrupoId")
                        .IsUnique();

                    b.ToTable("GrupoOpcoes");

                    b.HasData(
                        new
                        {
                            OpcaoGrupoId = new Guid("1e5e5eb5-84c7-4eca-b0c1-921860434f70"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 61, DateTimeKind.Local).AddTicks(957),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Acompanhamentos",
                            ResourceGroupoType = 6,
                            Status = 1
                        },
                        new
                        {
                            OpcaoGrupoId = new Guid("b5bcb329-4f23-4752-a738-4bfe7ed4bb46"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 61, DateTimeKind.Local).AddTicks(1246),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Turbine seu Lanche",
                            ResourceGroupoType = 6,
                            Status = 1
                        },
                        new
                        {
                            OpcaoGrupoId = new Guid("15af8bd9-6d54-43f2-8c74-43d5d4da32d8"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 61, DateTimeKind.Local).AddTicks(1248),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Tamanhos",
                            ResourceGroupoType = 1,
                            Status = 1
                        },
                        new
                        {
                            OpcaoGrupoId = new Guid("26b1a876-7ee4-4f15-9bb1-d33c840c5049"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 61, DateTimeKind.Local).AddTicks(1250),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Massas",
                            ResourceGroupoType = 2,
                            Status = 1
                        },
                        new
                        {
                            OpcaoGrupoId = new Guid("668a93a9-704e-4036-a515-11e4ddbe4129"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 61, DateTimeKind.Local).AddTicks(1252),
                            Index = 0,
                            Max = 5,
                            Min = 0,
                            Nome = "Bordas",
                            ResourceGroupoType = 3,
                            Status = 1
                        },
                        new
                        {
                            OpcaoGrupoId = new Guid("d1eed8e6-c1f0-4f09-a235-2d459bb33cbb"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 61, DateTimeKind.Local).AddTicks(1256),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Sabores",
                            ResourceGroupoType = 4,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.HasIndex("ProdutoId")
                        .IsUnique()
                        .HasFilter("[ProdutoId] IS NOT NULL");

                    b.ToTable("Itens");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("289a4fbe-18b9-4506-b21f-2957f5919fbc"),
                            CategoriaId = new Guid("c1a5f8e2-3b6d-4f8e-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 59, DateTimeKind.Local).AddTicks(6976),
                            Index = 0,
                            ProdutoId = new Guid("51b644cc-a90c-4456-992f-f86631176796"),
                            Tipo = 1
                        },
                        new
                        {
                            ItemId = new Guid("56b5c746-57d8-4964-bc3b-46eb18658208"),
                            CategoriaId = new Guid("d2b6f9e3-4c7e-5f9f-0d8f-1a2b3c4d5e6f"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 59, DateTimeKind.Local).AddTicks(7652),
                            Index = 0,
                            ProdutoId = new Guid("62133b9f-5542-401d-8743-49ec7da8c847"),
                            Tipo = 0
                        },
                        new
                        {
                            ItemId = new Guid("0c8eb292-8786-4707-8025-95a3d834da68"),
                            CategoriaId = new Guid("d2b6f9e3-4c7e-5f9f-0d8f-1a2b3c4d5e6f"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 59, DateTimeKind.Local).AddTicks(7655),
                            Index = 0,
                            ProdutoId = new Guid("ccea5142-1b90-40d9-b35d-72685950260b"),
                            Tipo = 0
                        },
                        new
                        {
                            ItemId = new Guid("b8a99cea-8dbb-426a-bfe0-058fc44333f6"),
                            CategoriaId = new Guid("d2b6f9e3-4c7e-5f9f-0d8f-1a2b3c4d5e6f"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 59, DateTimeKind.Local).AddTicks(7659),
                            Index = 0,
                            ProdutoId = new Guid("4f3560c5-a6f3-40c9-885e-2e7e7ee4e9d0"),
                            Tipo = 0
                        },
                        new
                        {
                            ItemId = new Guid("fa71f64b-55d1-4f50-91a7-5ce4d5b72ee5"),
                            CategoriaId = new Guid("d2b6f9e3-4c7e-5f9f-0d8f-1a2b3c4d5e6f"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 59, DateTimeKind.Local).AddTicks(7661),
                            Index = 0,
                            ProdutoId = new Guid("39b52e42-c21e-408b-9fa2-d2cccef926d1"),
                            Tipo = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.ModificacaoContextoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ContextoType")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("ItemId");

                    b.ToTable("ContextoItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e756e2f8-cb5a-4ddb-92d5-ab318a34611e"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 0,
                            ItemId = new Guid("0c8eb292-8786-4707-8025-95a3d834da68"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("1f6eb8b1-8bdf-4df0-9115-a6dc7fb24e7b"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 1,
                            ItemId = new Guid("0c8eb292-8786-4707-8025-95a3d834da68"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("9014b9ab-a3d0-49a6-80d6-5a596f2203d2"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 0,
                            ItemId = new Guid("b8a99cea-8dbb-426a-bfe0-058fc44333f6"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("95fcc2a8-02ac-4a85-a7fc-67d3ba970f67"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 1,
                            ItemId = new Guid("b8a99cea-8dbb-426a-bfe0-058fc44333f6"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("eba99296-dda0-45bb-be6b-7475dae58432"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 0,
                            ItemId = new Guid("56b5c746-57d8-4964-bc3b-46eb18658208"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("b1ca6706-97ba-47e7-907e-68486ff81b91"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 1,
                            ItemId = new Guid("56b5c746-57d8-4964-bc3b-46eb18658208"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("068b5586-48b4-4f17-9ee2-6195b92615c3"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 0,
                            ItemId = new Guid("fa71f64b-55d1-4f50-91a7-5ce4d5b72ee5"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("df747025-8547-4eef-8c7b-36d8b4df3f27"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 1,
                            ItemId = new Guid("fa71f64b-55d1-4f50-91a7-5ce4d5b72ee5"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("a143c9ed-dffb-4d66-87f3-3a17120afb33"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 0,
                            ItemId = new Guid("289a4fbe-18b9-4506-b21f-2957f5919fbc"),
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("93fbbdbb-8bf3-4450-9752-5bc629d7c581"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            ContextoType = 1,
                            ItemId = new Guid("289a4fbe-18b9-4506-b21f-2957f5919fbc"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Opcoes", b =>
                {
                    b.Property<Guid>("OpcaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fracoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OpcoesGrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OpcaoId");

                    b.HasIndex("OpcaoId")
                        .IsUnique();

                    b.HasIndex("OpcoesGrupoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Opcoes");

                    b.HasData(
                        new
                        {
                            OpcaoId = new Guid("d76aca65-4303-4a4d-a046-4c93151a4d67"),
                            OpcoesGrupoId = new Guid("b5bcb329-4f23-4752-a738-4bfe7ed4bb46"),
                            ProdutoId = new Guid("a36cbbdf-7c06-4bde-8cf3-e99efc7603fa"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("aecc1532-da5e-444f-8989-519012edf46e"),
                            OpcoesGrupoId = new Guid("b5bcb329-4f23-4752-a738-4bfe7ed4bb46"),
                            ProdutoId = new Guid("8d86a76d-9585-440e-9482-457392deff8d"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("945ef3bc-7741-4bec-a0ce-4660c09a564f"),
                            Fracoes = "1",
                            OpcoesGrupoId = new Guid("15af8bd9-6d54-43f2-8c74-43d5d4da32d8"),
                            ProdutoId = new Guid("27fa98cd-e119-432d-9b0a-8f99a65be1b7"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("2587c76e-3aa3-45e6-95d9-35c21ac19f9d"),
                            Fracoes = "1,2",
                            OpcoesGrupoId = new Guid("15af8bd9-6d54-43f2-8c74-43d5d4da32d8"),
                            ProdutoId = new Guid("932e18a2-396d-40d2-8de4-da0cf8f95faf"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("7fb0eac3-43e5-41c6-860e-a38793db4988"),
                            OpcoesGrupoId = new Guid("26b1a876-7ee4-4f15-9bb1-d33c840c5049"),
                            ProdutoId = new Guid("9f72cd07-4463-4bfc-8fc1-97129c775e21"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("d0d0df88-b276-4a21-ab14-063e8f0c3c5d"),
                            OpcoesGrupoId = new Guid("26b1a876-7ee4-4f15-9bb1-d33c840c5049"),
                            ProdutoId = new Guid("c8eff6c6-f3c5-48ec-9a5b-aa5b3eeec582"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("cc71b438-523f-49ac-918a-82df71244f9b"),
                            OpcoesGrupoId = new Guid("668a93a9-704e-4036-a515-11e4ddbe4129"),
                            ProdutoId = new Guid("e4ac0247-33ed-476a-ae69-363f27fe0df7"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("df8728b2-7773-486b-aa93-47627bdd0c54"),
                            OpcoesGrupoId = new Guid("668a93a9-704e-4036-a515-11e4ddbe4129"),
                            ProdutoId = new Guid("eb021b00-0fef-434b-9da5-77e4dbca047e"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("0d58a046-1871-433d-bd8d-2b33abfbfa70"),
                            OpcoesGrupoId = new Guid("d1eed8e6-c1f0-4f09-a235-2d459bb33cbb"),
                            ProdutoId = new Guid("d6ae0c15-4db9-454e-868b-a9ec7719da5e"),
                            Status = 1
                        },
                        new
                        {
                            OpcaoId = new Guid("a4eb62d0-ca33-459e-82b1-4de25997ba9e"),
                            OpcoesGrupoId = new Guid("d1eed8e6-c1f0-4f09-a235-2d459bb33cbb"),
                            ProdutoId = new Guid("b4a093cc-7e4a-49d2-909a-fed1cc58c572"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Property<Guid>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CatalogoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIndustrializado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.PrimitiveCollection<string>("RestriocaoAlimentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Serving")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("CatalogoId");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            ProdutoId = new Guid("62133b9f-5542-401d-8743-49ec7da8c847"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(5837),
                            Descricao = "Hamburguer, Queijo, Presunto e Maionese",
                            Ean = "7891234567890",
                            IsIndustrializado = false,
                            Nome = "X-Burger",
                            Peso = 5,
                            Serving = 1,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("ccea5142-1b90-40d9-b35d-72685950260b"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6762),
                            Descricao = "",
                            IsIndustrializado = false,
                            Nome = "X-Salada",
                            Peso = 0,
                            Serving = 1,
                            Status = 1
                        },
                        new
                        {
                            ProdutoId = new Guid("4f3560c5-a6f3-40c9-885e-2e7e7ee4e9d0"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6767),
                            Descricao = "Milho, Tomate, Alface, Queijo, Hamburguer, Frango e Maionese",
                            IsIndustrializado = false,
                            Nome = "X-Frango",
                            Peso = 0,
                            Serving = 1,
                            Status = 1
                        },
                        new
                        {
                            ProdutoId = new Guid("39b52e42-c21e-408b-9fa2-d2cccef926d1"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6770),
                            Descricao = "Milho, Tomate, Alface, Queijo, Carne e Maionese",
                            IsIndustrializado = false,
                            Nome = "X- Gaúcho",
                            Peso = 0,
                            Serving = 1,
                            Status = 0
                        },
                        new
                        {
                            ProdutoId = new Guid("8d86a76d-9585-440e-9482-457392deff8d"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6773),
                            IsIndustrializado = false,
                            Nome = "Fritas P",
                            Peso = 200,
                            Serving = 1,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("a36cbbdf-7c06-4bde-8cf3-e99efc7603fa"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6780),
                            IsIndustrializado = false,
                            Nome = "Bife",
                            Peso = 0,
                            Serving = 0,
                            Status = 0
                        },
                        new
                        {
                            ProdutoId = new Guid("51b644cc-a90c-4456-992f-f86631176796"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6784),
                            IsIndustrializado = false,
                            Nome = "Pizzas Tradicionais",
                            Peso = 10,
                            Serving = 0,
                            Status = 1,
                            Unidade = "kg"
                        },
                        new
                        {
                            ProdutoId = new Guid("27fa98cd-e119-432d-9b0a-8f99a65be1b7"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6787),
                            IsIndustrializado = false,
                            Nome = "Tamanho Médio",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("932e18a2-396d-40d2-8de4-da0cf8f95faf"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6789),
                            IsIndustrializado = false,
                            Nome = "Tamanho Grande",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("9f72cd07-4463-4bfc-8fc1-97129c775e21"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6792),
                            IsIndustrializado = false,
                            Nome = "Massa Tradicional",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("c8eff6c6-f3c5-48ec-9a5b-aa5b3eeec582"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6795),
                            IsIndustrializado = false,
                            Nome = "Massa fina",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("e4ac0247-33ed-476a-ae69-363f27fe0df7"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6797),
                            IsIndustrializado = false,
                            Nome = "Borda Tradicional",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("eb021b00-0fef-434b-9da5-77e4dbca047e"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6800),
                            IsIndustrializado = false,
                            Nome = "Borda Recheada",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("d6ae0c15-4db9-454e-868b-a9ec7719da5e"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6802),
                            IsIndustrializado = false,
                            Nome = "Calabresa",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            ProdutoId = new Guid("b4a093cc-7e4a-49d2-909a-fed1cc58c572"),
                            CatalogoId = new Guid("50f8a1fc-1672-43e0-8746-aadcb005a3da"),
                            DataCriacao = new DateTime(2025, 9, 17, 21, 43, 19, 60, DateTimeKind.Local).AddTicks(6804),
                            IsIndustrializado = false,
                            Nome = "Frango com Catupiry",
                            Peso = 5,
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        });
                });

            modelBuilder.Entity("Domain.Juncoes.ProdutoOpcoesGrupo", b =>
                {
                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GrupoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoOpcoesGrupos");

                    b.HasData(
                        new
                        {
                            GrupoId = new Guid("1e5e5eb5-84c7-4eca-b0c1-921860434f70"),
                            ProdutoId = new Guid("62133b9f-5542-401d-8743-49ec7da8c847")
                        },
                        new
                        {
                            GrupoId = new Guid("b5bcb329-4f23-4752-a738-4bfe7ed4bb46"),
                            ProdutoId = new Guid("ccea5142-1b90-40d9-b35d-72685950260b")
                        },
                        new
                        {
                            GrupoId = new Guid("15af8bd9-6d54-43f2-8c74-43d5d4da32d8"),
                            ProdutoId = new Guid("51b644cc-a90c-4456-992f-f86631176796")
                        },
                        new
                        {
                            GrupoId = new Guid("26b1a876-7ee4-4f15-9bb1-d33c840c5049"),
                            ProdutoId = new Guid("51b644cc-a90c-4456-992f-f86631176796")
                        },
                        new
                        {
                            GrupoId = new Guid("668a93a9-704e-4036-a515-11e4ddbe4129"),
                            ProdutoId = new Guid("51b644cc-a90c-4456-992f-f86631176796")
                        },
                        new
                        {
                            GrupoId = new Guid("d1eed8e6-c1f0-4f09-a235-2d459bb33cbb"),
                            ProdutoId = new Guid("51b644cc-a90c-4456-992f-f86631176796")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.HasOne("Domain.Entities.Catalogo", "Catalogo")
                        .WithMany("Categorias")
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");
                });

            modelBuilder.Entity("Domain.Entities.Contexto", b =>
                {
                    b.HasOne("Domain.Entities.Catalogo", "Catalogo")
                        .WithMany("Contexto")
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");
                });

            modelBuilder.Entity("Domain.Entities.CustomizacaoModificacoes", b =>
                {
                    b.HasOne("Domain.Entities.Item", "Item")
                        .WithMany("CustomizacaoModificacoes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Opcoes", "Opcoes")
                        .WithMany("CustomizacaoModificacoes")
                        .HasForeignKey("customizationOptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Opcoes", "parentCustomizationOptions")
                        .WithMany("ParentCustomizacaoModificacoes")
                        .HasForeignKey("parentCustomizationOptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Opcoes");

                    b.Navigation("parentCustomizationOptions");
                });

            modelBuilder.Entity("Domain.Entities.Item", b =>
                {
                    b.HasOne("Domain.Entities.Categoria", "Categoria")
                        .WithMany("Items")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithOne("Items")
                        .HasForeignKey("Domain.Entities.Item", "ProdutoId");

                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Entities.ModificacaoContextoItem", b =>
                {
                    b.HasOne("Domain.Entities.Catalogo", "Catalogo")
                        .WithMany("ContextoItems")
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Item", "Item")
                        .WithMany("ContextoItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Catalogo");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Domain.Entities.Opcoes", b =>
                {
                    b.HasOne("Domain.Entities.GrupoOpcoes", "GrupoOpcoes")
                        .WithMany("Opcoes")
                        .HasForeignKey("OpcoesGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithMany("Opcoes")
                        .HasForeignKey("ProdutoId");

                    b.Navigation("GrupoOpcoes");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.HasOne("Domain.Entities.Catalogo", "Catalogo")
                        .WithMany()
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");
                });

            modelBuilder.Entity("Domain.Juncoes.ProdutoOpcoesGrupo", b =>
                {
                    b.HasOne("Domain.Entities.GrupoOpcoes", "GrupoOpcoes")
                        .WithMany("ProdutoOpcoesGrupo")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithMany("ProdutoOpcoesGrupo")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoOpcoes");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Entities.Catalogo", b =>
                {
                    b.Navigation("Categorias");

                    b.Navigation("Contexto");

                    b.Navigation("ContextoItems");
                });

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Domain.Entities.GrupoOpcoes", b =>
                {
                    b.Navigation("Opcoes");

                    b.Navigation("ProdutoOpcoesGrupo");
                });

            modelBuilder.Entity("Domain.Entities.Item", b =>
                {
                    b.Navigation("ContextoItems");

                    b.Navigation("CustomizacaoModificacoes");
                });

            modelBuilder.Entity("Domain.Entities.Opcoes", b =>
                {
                    b.Navigation("CustomizacaoModificacoes");

                    b.Navigation("ParentCustomizacaoModificacoes");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Opcoes");

                    b.Navigation("ProdutoOpcoesGrupo");
                });
#pragma warning restore 612, 618
        }
    }
}
