// <auto-generated />
using System;
using Infrastructure.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ContextCatalogs))]
    partial class ContextCatalogsModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComercioUId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId")
                        .IsUnique();

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = new Guid("c1a5f8e2-3b6d-4f8e-9c7e-0d8f9a1b2c3d"),
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 358, DateTimeKind.Local).AddTicks(2591),
                            Descricao = "Categoria de Pizzas Tradicionais",
                            Index = 0,
                            Nome = "Pizzas",
                            Status = 1,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = new Guid("d2b6f9e3-4c7e-5f9f-0d8f-1a2b3c4d5e6f"),
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 361, DateTimeKind.Local).AddTicks(8927),
                            Descricao = "Categoria de Massas para Pizzas",
                            Index = 1,
                            Nome = "Lanches Rápidos",
                            Status = 1,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = new Guid("68a418a3-ae7f-4623-8afc-35afbeed4b15"),
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 361, DateTimeKind.Local).AddTicks(8960),
                            Descricao = "Categoria de Pizzas Doces",
                            Index = 2,
                            Nome = "Pizza Doces",
                            Status = 1,
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Contexto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ContextoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OpcaoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("parentOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("parentOptionId");

                    b.ToTable("Contextos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContextoId = new Guid("1cdb162b-7632-4876-8535-76701e7acde2"),
                            OpcaoId = 1,
                            Status = 1,
                            parentOptionId = 3
                        },
                        new
                        {
                            Id = 2,
                            ContextoId = new Guid("796b05b5-88d9-4793-a9ff-1cc5abe78db5"),
                            OpcaoId = 1,
                            Status = 1,
                            parentOptionId = 3
                        },
                        new
                        {
                            Id = 3,
                            ContextoId = new Guid("fe76c116-3197-4893-aeb1-e1229d837d30"),
                            OpcaoId = 1,
                            Status = 1,
                            parentOptionId = 4
                        },
                        new
                        {
                            Id = 4,
                            ContextoId = new Guid("ef61b0f2-31a3-45bb-ad6c-a00895849d5f"),
                            OpcaoId = 2,
                            Status = 1,
                            parentOptionId = 4
                        },
                        new
                        {
                            Id = 5,
                            ContextoId = new Guid("1bb9af44-966e-4b5d-8d7b-f0def1d0ab82"),
                            OpcaoId = 13,
                            Status = 1,
                            parentOptionId = 10
                        },
                        new
                        {
                            Id = 6,
                            ContextoId = new Guid("84b1c768-2871-4019-824f-01defec03ea3"),
                            OpcaoId = 14,
                            Status = 1,
                            parentOptionId = 10
                        },
                        new
                        {
                            Id = 7,
                            ContextoId = new Guid("13f23287-785b-4b15-ba32-4bae9e4fa251"),
                            OpcaoId = 14,
                            Status = 1,
                            parentOptionId = 10
                        },
                        new
                        {
                            Id = 8,
                            ContextoId = new Guid("c3520267-072b-4dd6-84c5-9c882680797f"),
                            OpcaoId = 14,
                            Status = 1,
                            parentOptionId = 11
                        });
                });

            modelBuilder.Entity("Domain.Entities.GrupoOpcoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OpcaoGrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ResourceGroupoType")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpcaoGrupoId")
                        .IsUnique();

                    b.ToTable("GrupoOpcoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(7967),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Tamanhos",
                            OpcaoGrupoId = new Guid("15af8bd9-6d54-43f2-8c74-43d5d4da32d8"),
                            ResourceGroupoType = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9122),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Massas",
                            OpcaoGrupoId = new Guid("26b1a876-7ee4-4f15-9bb1-d33c840c5049"),
                            ResourceGroupoType = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9130),
                            Index = 0,
                            Max = 5,
                            Min = 0,
                            Nome = "Bordas",
                            OpcaoGrupoId = new Guid("668a93a9-704e-4036-a515-11e4ddbe4129"),
                            ResourceGroupoType = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9135),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Sabores",
                            OpcaoGrupoId = new Guid("d1eed8e6-c1f0-4f09-a235-2d459bb33cbb"),
                            ResourceGroupoType = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9140),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Acompanhamentos",
                            OpcaoGrupoId = new Guid("1e5e5eb5-84c7-4eca-b0c1-921860434f70"),
                            ResourceGroupoType = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9188),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Tamanhos",
                            OpcaoGrupoId = new Guid("b1d11fe1-f080-4dcf-847c-4fda4556b796"),
                            ResourceGroupoType = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9193),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Massas",
                            OpcaoGrupoId = new Guid("c3290906-b081-47ab-abdf-38291096b587"),
                            ResourceGroupoType = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9198),
                            Index = 0,
                            Max = 5,
                            Min = 0,
                            Nome = "Bordas",
                            OpcaoGrupoId = new Guid("040377c0-6674-4bd6-a55d-6637697aed8e"),
                            ResourceGroupoType = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 367, DateTimeKind.Local).AddTicks(9202),
                            Index = 0,
                            Max = 1,
                            Min = 0,
                            Nome = "Sabores",
                            OpcaoGrupoId = new Guid("dad6ebdd-59e3-47ee-827c-0c0c3c7fa1ae"),
                            ResourceGroupoType = 4,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.HasIndex("ProdutoId")
                        .IsUnique()
                        .HasFilter("[ProdutoId] IS NOT NULL");

                    b.ToTable("Itens");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaId = 1,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 366, DateTimeKind.Local).AddTicks(4421),
                            Index = 0,
                            ItemId = new Guid("05a9521e-183a-4d39-b6e4-0a0fbb9f6c44"),
                            ProdutoId = 1,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 366, DateTimeKind.Local).AddTicks(5204),
                            Index = 0,
                            ItemId = new Guid("4c4d3948-69f0-4366-85e2-a735e08f7e29"),
                            ProdutoId = 10,
                            Tipo = 0
                        },
                        new
                        {
                            Id = 3,
                            CategoriaId = 3,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 366, DateTimeKind.Local).AddTicks(5210),
                            Index = 0,
                            ItemId = new Guid("87ab51ea-5e29-4d68-bd5d-827f95893357"),
                            ProdutoId = 12,
                            Tipo = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoriaId = 2,
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 366, DateTimeKind.Local).AddTicks(5214),
                            Index = 0,
                            ItemId = new Guid("e837cd76-c1b1-496d-853f-749eca1f0c03"),
                            ProdutoId = 11,
                            Tipo = 0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Opcoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fracoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OpcaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OpcoesGrupoId")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OpcaoId")
                        .IsUnique();

                    b.HasIndex("OpcoesGrupoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Opcoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fracoes = "1",
                            OpcaoId = new Guid("945ef3bc-7741-4bec-a0ce-4660c09a564f"),
                            OpcoesGrupoId = 1,
                            ProdutoId = 4,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            Fracoes = "1,2",
                            OpcaoId = new Guid("2587c76e-3aa3-45e6-95d9-35c21ac19f9d"),
                            OpcoesGrupoId = 1,
                            ProdutoId = 5,
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            OpcaoId = new Guid("0d58a046-1871-433d-bd8d-2b33abfbfa70"),
                            OpcoesGrupoId = 4,
                            ProdutoId = 8,
                            Status = 1
                        },
                        new
                        {
                            Id = 4,
                            OpcaoId = new Guid("a4eb62d0-ca33-459e-82b1-4de25997ba9e"),
                            OpcoesGrupoId = 4,
                            ProdutoId = 9,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            OpcaoId = new Guid("cc71b438-523f-49ac-918a-82df71244f9b"),
                            OpcoesGrupoId = 3,
                            ProdutoId = 6,
                            Status = 1
                        },
                        new
                        {
                            Id = 6,
                            OpcaoId = new Guid("df8728b2-7773-486b-aa93-47627bdd0c54"),
                            OpcoesGrupoId = 3,
                            ProdutoId = 7,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            OpcaoId = new Guid("7fb0eac3-43e5-41c6-860e-a38793db4988"),
                            OpcoesGrupoId = 2,
                            ProdutoId = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = 8,
                            OpcaoId = new Guid("d0d0df88-b276-4a21-ab14-063e8f0c3c5d"),
                            OpcoesGrupoId = 2,
                            ProdutoId = 3,
                            Status = 1
                        },
                        new
                        {
                            Id = 9,
                            OpcaoId = new Guid("d3e31829-a215-47e3-9576-3fddec9417ec"),
                            OpcoesGrupoId = 5,
                            ProdutoId = 11,
                            Status = 1
                        },
                        new
                        {
                            Id = 10,
                            OpcaoId = new Guid("d0ea62e8-dd70-4744-b240-e0da591dd118"),
                            OpcoesGrupoId = 9,
                            ProdutoId = 13,
                            Status = 1
                        },
                        new
                        {
                            Id = 11,
                            OpcaoId = new Guid("9929499b-60b9-409d-90dc-0cf4db0c4535"),
                            OpcoesGrupoId = 9,
                            ProdutoId = 14,
                            Status = 1
                        },
                        new
                        {
                            Id = 12,
                            OpcaoId = new Guid("b94317db-7b78-4724-b4c1-dd05020654c6"),
                            OpcoesGrupoId = 7,
                            ProdutoId = 15,
                            Status = 1
                        },
                        new
                        {
                            Id = 13,
                            Fracoes = "1",
                            OpcaoId = new Guid("ad163e58-13b9-497b-8133-41d4f6d9cb1e"),
                            OpcoesGrupoId = 6,
                            ProdutoId = 16,
                            Status = 1
                        },
                        new
                        {
                            Id = 14,
                            Fracoes = "1,2",
                            OpcaoId = new Guid("d7748cc9-1a02-4a3f-9b1c-0b7094460a1b"),
                            OpcoesGrupoId = 6,
                            ProdutoId = 17,
                            Status = 1
                        },
                        new
                        {
                            Id = 15,
                            Fracoes = "1,2,3",
                            OpcaoId = new Guid("273a28f8-3d7f-4164-8ced-3e18ad650181"),
                            OpcoesGrupoId = 6,
                            ProdutoId = 18,
                            Status = 1
                        });
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ComercioUId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ean")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIndustrializado")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("RestriocaoAlimentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Serving")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Unidade")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(3928),
                            IsIndustrializado = false,
                            Nome = "Pizzas Tradicionais",
                            Peso = 10,
                            ProdutoId = new Guid("51b644cc-a90c-4456-992f-f86631176796"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "kg"
                        },
                        new
                        {
                            Id = 2,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5353),
                            IsIndustrializado = false,
                            Nome = "Massa Tradicional",
                            Peso = 5,
                            ProdutoId = new Guid("9f72cd07-4463-4bfc-8fc1-97129c775e21"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 3,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5364),
                            IsIndustrializado = false,
                            Nome = "Massa fina",
                            Peso = 5,
                            ProdutoId = new Guid("c8eff6c6-f3c5-48ec-9a5b-aa5b3eeec582"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 4,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5373),
                            IsIndustrializado = false,
                            Nome = "Tamanho Médio",
                            Peso = 5,
                            ProdutoId = new Guid("27fa98cd-e119-432d-9b0a-8f99a65be1b7"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 5,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5381),
                            IsIndustrializado = false,
                            Nome = "Tamanho Grande",
                            Peso = 5,
                            ProdutoId = new Guid("932e18a2-396d-40d2-8de4-da0cf8f95faf"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 6,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5407),
                            IsIndustrializado = false,
                            Nome = "Borda Tradicional",
                            Peso = 5,
                            ProdutoId = new Guid("e4ac0247-33ed-476a-ae69-363f27fe0df7"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 7,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5416),
                            IsIndustrializado = false,
                            Nome = "Borda Recheada",
                            Peso = 5,
                            ProdutoId = new Guid("eb021b00-0fef-434b-9da5-77e4dbca047e"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 8,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5424),
                            IsIndustrializado = false,
                            Nome = "Calabresa",
                            Peso = 5,
                            ProdutoId = new Guid("d6ae0c15-4db9-454e-868b-a9ec7719da5e"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 9,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5431),
                            IsIndustrializado = false,
                            Nome = "Frango com Catupiry",
                            Peso = 5,
                            ProdutoId = new Guid("b4a093cc-7e4a-49d2-909a-fed1cc58c572"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 10,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(5440),
                            Descricao = "Pão, carne, queijo e salada",
                            Ean = "7891234567890",
                            IsIndustrializado = false,
                            Nome = "X-Burger",
                            Peso = 5,
                            ProdutoId = new Guid("62133b9f-5542-401d-8743-49ec7da8c847"),
                            Serving = 1,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 11,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6631),
                            Descricao = "200 g",
                            IsIndustrializado = false,
                            Nome = "Batata Frita",
                            Peso = 5,
                            ProdutoId = new Guid("713713e7-641e-44fd-bd92-13ba43daf6a8"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 12,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6708),
                            IsIndustrializado = false,
                            Nome = "Pizzas Doces",
                            Peso = 10,
                            ProdutoId = new Guid("8e5eb648-9591-428a-a08d-edaca8930dac"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "kg"
                        },
                        new
                        {
                            Id = 13,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6714),
                            IsIndustrializado = false,
                            Nome = "Chocolate",
                            Peso = 5,
                            ProdutoId = new Guid("7c1ada9c-13f8-40cf-9d43-057b4c0e2559"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 14,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6719),
                            IsIndustrializado = false,
                            Nome = "Morango com Chocolate",
                            Peso = 5,
                            ProdutoId = new Guid("7a66e116-8825-4b92-9816-60b1328018a1"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 15,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6724),
                            IsIndustrializado = false,
                            Nome = "Massa Tradicional Doces",
                            Peso = 5,
                            ProdutoId = new Guid("df287fd9-f27d-43dc-be1e-53fd1a4ad1cd"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 16,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6728),
                            IsIndustrializado = false,
                            Nome = "Tamanho Pequeno",
                            Peso = 5,
                            ProdutoId = new Guid("bc90f374-9f12-4914-80f9-fbc1147a0ced"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 17,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6733),
                            IsIndustrializado = false,
                            Nome = "Tamanho Médio",
                            Peso = 5,
                            ProdutoId = new Guid("33b0b559-eecd-4076-a46b-2e3e78681953"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        },
                        new
                        {
                            Id = 18,
                            ComercioUId = new Guid("b1c8f3d2-4e5f-4b6a-9c7e-0d8f9a1b2c3d"),
                            DataCriacao = new DateTime(2025, 8, 28, 19, 59, 18, 365, DateTimeKind.Local).AddTicks(6747),
                            IsIndustrializado = false,
                            Nome = "Tamanho Grande",
                            Peso = 5,
                            ProdutoId = new Guid("6089df30-830f-4e04-a43d-8e476ab176d5"),
                            Serving = 0,
                            Status = 1,
                            Unidade = "g"
                        });
                });

            modelBuilder.Entity("Domain.Juncoes.ProdutoOpcoesGrupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.HasKey("GrupoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoOpcoesGrupos");

                    b.HasData(
                        new
                        {
                            GrupoId = 1,
                            ProdutoId = 1
                        },
                        new
                        {
                            GrupoId = 2,
                            ProdutoId = 1
                        },
                        new
                        {
                            GrupoId = 3,
                            ProdutoId = 1
                        },
                        new
                        {
                            GrupoId = 4,
                            ProdutoId = 1
                        },
                        new
                        {
                            GrupoId = 5,
                            ProdutoId = 10
                        },
                        new
                        {
                            GrupoId = 6,
                            ProdutoId = 12
                        },
                        new
                        {
                            GrupoId = 7,
                            ProdutoId = 12
                        },
                        new
                        {
                            GrupoId = 8,
                            ProdutoId = 12
                        },
                        new
                        {
                            GrupoId = 9,
                            ProdutoId = 12
                        },
                        new
                        {
                            GrupoId = 5,
                            ProdutoId = 11
                        });
                });

            modelBuilder.Entity("Domain.Entities.Contexto", b =>
                {
                    b.HasOne("Domain.Entities.Opcoes", "Opcao")
                        .WithMany("Context")
                        .HasForeignKey("parentOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opcao");
                });

            modelBuilder.Entity("Domain.Entities.Item", b =>
                {
                    b.HasOne("Domain.Entities.Categoria", "Categoria")
                        .WithMany("Items")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithOne("Items")
                        .HasForeignKey("Domain.Entities.Item", "ProdutoId");

                    b.Navigation("Categoria");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Entities.Opcoes", b =>
                {
                    b.HasOne("Domain.Entities.GrupoOpcoes", "GrupoOpcoes")
                        .WithMany("Opcoes")
                        .HasForeignKey("OpcoesGrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId");

                    b.Navigation("GrupoOpcoes");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Juncoes.ProdutoOpcoesGrupo", b =>
                {
                    b.HasOne("Domain.Entities.GrupoOpcoes", "GrupoOpcoes")
                        .WithMany("ProdutoOpcoesGrupo")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Produto", "Produto")
                        .WithMany("ProdutoOpcoesGrupo")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GrupoOpcoes");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Domain.Entities.Categoria", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Domain.Entities.GrupoOpcoes", b =>
                {
                    b.Navigation("Opcoes");

                    b.Navigation("ProdutoOpcoesGrupo");
                });

            modelBuilder.Entity("Domain.Entities.Opcoes", b =>
                {
                    b.Navigation("Context");
                });

            modelBuilder.Entity("Domain.Entities.Produto", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("ProdutoOpcoesGrupo");
                });
#pragma warning restore 612, 618
        }
    }
}
